<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.acumos.federation</groupId>
	<artifactId>gateway</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>Federation Gateway</name>
	<description>Federated Acumos Interface for inter-acumos and ONAP communication</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
	</parent>
	<!--
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
	</parent>
	-->

	<properties>
		<encoding>UTF-8</encoding>
		<!-- Stand-alone RESTFul application -->
		<start-class>org.acumos.federation.gateway.Application</start-class>
		<!-- Jenkins invokes mvn with argument -Dbuild.number=${BUILD_NUMBER} -->
		<build.number>0</build.number>
		<eelf.version>1.0.0</eelf.version>
		<!-- tests require database to be running -->
		<skipTests>false</skipTests>
		<!-- Docker daemon -->
		<docker.host.url>unix:/var/run/docker.sock</docker.host.url>
		<!-- Docker image registry -->
		<docker.registry.url>Set by Jenkins</docker.registry.url>
		<docker.registry.login>Registry userId - supplied by jenkins</docker.registry.login>
		<docker.registry.password>Registry password - supplied by jenkins</docker.registry.password>
		<!--
		<docker.registry.url>registry.hub.docker.io</docker.registry.url>
		--> 
		<!-- dependencies versions -->
		<slf4j.version>1.7.25</slf4j.version>
		<logback.version>1.2.3</logback.version>
		<spring.boot.devtools.version>1.5.8.RELEASE</spring.boot.devtools.version>
		<spring.boot.starter.web.version>1.5.8.RELEASE</spring.boot.starter.web.version>
		<spring.boot.starter.security.version>1.5.8.RELEASE</spring.boot.starter.security.version>
		<spring.boot.starter.test.version>1.5.8.RELEASE</spring.boot.starter.test.version>
		<spring.boot.configuration.processor.version>1.5.8.RELEASE</spring.boot.configuration.processor.version>
		<!-- All acumos.nexus.* are overridden by Jenkins settings -->
		<acumos.nexus.url>http://cognita-nexus01.eastus.cloudapp.azure.com:8081</acumos.nexus.url>
		<acumos.nexus.snapshot.path>repository/repo_cognita_platform_maven_snapshots</acumos.nexus.snapshot.path>
		<acumos.nexus.release.path>repository/repo_cognita_platform_maven</acumos.nexus.release.path>
		<maven.build.timestamp.format>yyyy.MM.dd_HH.mm</maven.build.timestamp.format>
	</properties>

	<repositories>
		<repository>
			<id>acumos-snapshots</id>
			<name>acumos-repository-snapshots</name>
			<url>${acumos.nexus.url}/${acumos.nexus.snapshot.path}</url>
		</repository>
		<repository>
			<id>acumos-releases</id>
			<name>acumos-repository-releases</name>
			<url>${acumos.nexus.url}/${acumos.nexus.release.path}</url>
		</repository>
		<repository>
			<id>onap-snapshots</id>
			<name>ONAP Snapshot Repository</name>
			<url>${onap.nexus.url}/${onap.nexus.snapshot.path}</url>
		</repository>
		<repository>
			<id>onap-releases</id>
			<name>ONAP Release Repository</name>
			<url>${onap.nexus.url}/${onap.nexus.release.path}</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
	      <groupId>org.json</groupId>
	      <artifactId>json</artifactId>
	      <version>20160212</version>
	    </dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!--
		<dependency>
			<groupId>org.acumos</groupId>
			<artifactId>acumos-docker-client</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>
		-->
		<dependency>
			<groupId>org.acumos</groupId>
			<artifactId>acumos-nexus-client</artifactId>
			<version>1.10.9</version>
		</dependency>
		<dependency>
    	<groupId>org.springframework.boot</groupId>
     		<artifactId>spring-boot-starter-security</artifactId>
			<version>${spring.boot.starter.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring.boot.starter.web.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>${spring.boot.starter.test.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<version>${spring.boot.configuration.processor.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
		    <groupId>org.apache.httpcomponents</groupId>
		    <artifactId>httpclient</artifactId>
		    <version>4.5</version>
		</dependency>
		<dependency>
    	<groupId>org.springframework.shell</groupId>
    	<artifactId>spring-shell</artifactId>
    	<version>1.2.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.acumos.common-dataservice</groupId>
			<artifactId>cmn-data-svc-client</artifactId>
			<version>1.9.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>com.att.eelf</groupId>
			<artifactId>eelf-core</artifactId>
			<version>${eelf.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.6.0</version>
		</dependency>
		<dependency>
	    	<groupId>org.python</groupId>
	    	<artifactId>jython-standalone</artifactId>
	    	<version>2.7.1-rc3</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
	    	<groupId>commons-cli</groupId>
	    	<artifactId>commons-cli</artifactId>
	    	<version>1.2</version>
		</dependency>
		<dependency>
	    	<groupId>org.apache.commons</groupId>
	    	<artifactId>commons-lang3</artifactId>
	    	<version>3.6</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.8.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>1.5.3.RELEASE</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Build-Number>${project.version}.${build.number}</Build-Number>
							<Build-Time>${maven.build.timestamp}</Build-Time>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
     <!--  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/deps</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin> -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.21.0</version>
				<configuration>
					<verbose>true</verbose>
					<dockerHost>${docker.host.url}</dockerHost>
					<registry>${docker.registry.url}</registry>
					<authConfig>
						<username>${docker.registry.login}</username>
						<password>${docker.registry.password}</password>
					</authConfig>
					<images>
						<image>
							<name>federation-gateway:${project.version}</name>
							<build>
								<!-- This is the same FROM used in a Dockerfile -->
								<!-- <from>openjdk:8-jdk</from> -->
								<from>frolvlad/alpine-oraclejdk8:slim</from>
								<tags>
   	 							<tag>latest</tag>
    							<tag>${project.version}</tag>
   	 							<tag>${maven.build.timestamp}</tag>
								</tags>
								<assembly>
									<inline>
										<files>
											<file>
												<source>application.properties.template</source>
												<outputDirectory />
												<destName>application.properties</destName>
											</file>
											<file>
												<source>src/test/resources/ist-acumosa.pkcs12</source>
												<outputDirectory />
												<destName>ist-acumosa.pkcs12</destName>
											</file>
											<file>
												<source>src/test/resources/ist-acumosb.pkcs12</source>
												<outputDirectory />
												<destName>ist-acumosb.pkcs12</destName>
											</file>
											<file>
												<source>src/test/resources/acumosTrustStore.jks</source>
												<outputDirectory />
												<destName>acumosTrustStore.jks</destName>
											</file>
											<file>
												<source>target/${project.artifactId}-${project.version}.${project.packaging}</source>
												<outputDirectory />
											</file>
										</files>
									</inline>
								</assembly>
								<!-- This is the same CMD used in a Dockerfile -->
								<cmd>
									<shell>cd /maven; java -Djavax.net.debug=ssl -Djava.security.egd=file:/dev/./urandom -jar ${project.artifactId}-${project.version}.${project.packaging}</shell>
								</cmd>
							</build>
						</image>
						<image>
							<name>federation-gateway-test:${project.version}</name>
							<build>
								<!-- This is the same FROM used in a Dockerfile -->
								<!-- <from>openjdk:8-jdk</from> -->
								<from>frolvlad/alpine-oraclejdk8:slim</from>
								<tags>
   	 							<tag>latest</tag>
    							<tag>${project.version}</tag>
   	 							<tag>${maven.build.timestamp}</tag>
								</tags>
								<assembly>
									<inline>
										<files>
											<file>
												<source>application.properties.template</source>
												<outputDirectory />
												<destName>application.properties</destName>
											</file>
<!--
	need the following two for server config
-->
											<file>
												<source>src/test/resources/acumosa.pkcs12</source>
												<outputDirectory />
												<destName>acumosa.pkcs12</destName>
											</file>
											<file>
												<source>src/test/resources/acumosb.pkcs12</source>
												<outputDirectory />
												<destName>acumosb.pkcs12</destName>
											</file>
											<file>
												<source>src/test/resources/acumosTrustStore.jks</source>
												<outputDirectory />
												<destName>acumosTrustStore.jks</destName>
											</file>
											<file>
												<source>target/${project.artifactId}-${project.version}.${project.packaging}</source>
												<outputDirectory />
											</file>
											<file>
												<source>target/${project.artifactId}-${project.version}-tests.${project.packaging}</source>
												<outputDirectory />
											</file>
										</files>
										<fileSets>
                      <fileSet>
                        <directory>${basedir}/target/deps/</directory>
                        <outputDirectory>/libs/</outputDirectory>
                        <includes>
                          <include>*</include>
                        </includes>
                        <fileMode>0755</fileMode>
											</fileSet>
										</fileSets>
									</inline>
								</assembly>
								<!-- This is the same CMD used in a Dockerfile -->
								<cmd>
									<shell>cd /maven; java -cp ${project.artifactId}-${project.version}.${project.packaging}:${project.artifactId}-${project.version}-tests.${project.packaging}:/libs/* -Djavax.net.debug=ssl:handshake -Djavax.net.ssl.trustStore=/app/certs/acumosTrustStore.jks -Djavax.net.ssl.trustStorePassword=acumos -Djava.security.egd=file:/dev/./urandom org.springframework.boot.loader.PropertiesLauncher</shell>

<!--
									<shell>cd /maven; java -cp ${project.artifactId}-${project.version}.${project.packaging}:${project.artifactId}-${project.version}-tests.${project.packaging}:/libs/* -Djavax.net.debug=ssl:handshake -Djavax.net.ssl.trustStore=acumosTrustStore.jks -Djavax.net.ssl.trustStorePassword=acumos -Djava.security.egd=file:/dev/./urandom org.springframework.boot.loader.PropertiesLauncher</shell>
-->
								</cmd>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<goals>
							<!-- build is bound to install phase -->
							<goal>build</goal>
							<!-- push is bound to deploy phase -->
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.14</version>
				<configuration>
					<licenseName>acumos</licenseName>
					<licenseResolver>${project.baseUri}/src/license</licenseResolver>
					<addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
					<processStartTag>===============LICENSE_START=======================================================</processStartTag>
					<processEndTag>===============LICENSE_END=========================================================</processEndTag>
					<sectionDelimiter>===================================================================================</sectionDelimiter>
					<inceptionYear>2017</inceptionYear>
					<organizationName>AT&amp;T Intellectual Property &amp; Tech Mahindra. All rights reserved.</organizationName>
					<projectName>Acumos</projectName>
					<canUpdateCopyright>true</canUpdateCopyright>
					<canUpdateDescription>true</canUpdateDescription>
					<canUpdateLicense>true</canUpdateLicense>
					<emptyLineAfterHeader>true</emptyLineAfterHeader>
					<includes>
						<include>**/*.java</include>
					</includes>
				</configuration>
<!--
				<executions>
					<execution>
						<id>first</id>
						<goals>
							<goal>update-file-header</goal>
						</goals>
						<phase>process-sources</phase>
					</execution>
				</executions>
-->
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.6.201602180812</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
	<distributionManagement>
		<snapshotRepository>
			<!-- must match ID in Jenkins settings -->
			<id>acumos-nexus</id>
			<name>acumos-repository-snapshots</name>
			<url>${acumos.nexus.url}/${acumos.nexus.snapshot.path}</url>
		</snapshotRepository>
		<repository>
			<!-- must match ID in Jenkins settings -->
			<id>acumos-nexus</id>
			<name>acumos-repository-releases</name>
			<url>${acumos.nexus.url}/${acumos.nexus.release.path}</url>
		</repository>
	</distributionManagement>
</project>
